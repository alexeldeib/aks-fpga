name: aks-fpga
on:
  push:
    branches:
    - main
    - dev
  workflow_dispatch: {}

env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
  REPO: docker.io/alexeldeib
  IMG_PREFIX: aks-fpga

jobs:
  build: 
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@master
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - uses: sigstore/cosign-installer@main
      with:
        cosign-release: 'v1.0.0'
    - name: apt install moreutils
      run: apt install -y moreutils
    - name: Configure token
      run: |
        curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r .value | sponge token
    - name: build image
      run: |
        set -euo pipefail
        docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
        TAG=$(date -Ihours | tr :+ -)
        echo "TAG: ${TAG}"
        echo "${TAG}" > tag
        docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache-new -t ${REPO}/${IMG_PREFIX}:${TAG} --output=type=docker .
        docker tag ${REPO}/${IMG_PREFIX}:${TAG} ${REPO}/${IMG_PREFIX}:latest
        docker push ${REPO}/${IMG_PREFIX}:latest
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
    - name: Sign artifact
      run: |
        cat token
        cosign sign --identity-token="$(cat token)" ${REPO}/${IMG_PREFIX}:$(cat tag)
      env:
        COSIGN_EXPERIMENTAL: 1
